# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Console-log CI by Docker Hub

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  PROJECT_NAME: console-log
  BUCKET_NAME: console-log-codedeploy
  CODE_DEPLOY_APP_NAME: Console-log-CodeDeploy
  DEPLOYMENT_GROUP_NAME: Console-log-Deployment-Group



jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: init with Gradle
      uses: gradle/gradle-build-action@v2
    - run: gradle init

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 7.5.1
        arguments: build

    # Docker Hub에 push할 이미지 빌드
    - name: Docker Build
      run: |
        docker build -t ${{secrets.DOCKER_IMAGE}} .

    # 도커 허브 사용을 위해 도커에 로그인
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }} # 도커 홈페이지에서 발급받은 토큰 사용

    - name: Push to DockerHub
      run: |
        docker push ${{secrets.DOCKER_IMAGE}}

    # ssh를 통해 EC2에 접속, 접속한 후에 실행할 스크립트 작성
    - name: Connect to EC2 using SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.AWS_HOST}}
        username: ${{secrets.AWS_USERNAME}}
        key: ${{ secrets.AWS_KEY_PEM }}
        envs: GITHUB_SHA
        script: |
          sudo docker down ${{secrets.DOCKER_IMAGE}}
          sudo docker pull ${{secrets.DOCKER_IMAGE}}
          sudo docker up ${{secrets.DOCKER_IMAGE}}